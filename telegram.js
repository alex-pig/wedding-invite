
const _0x1a2b = ['ODAxMTk4NzAwNg==', 'QUFFZkVuUWc2YWxsNlYtMVhEdXZkbEdWdEJjN0w3N3FlUG8='];
const _0x3c4d = ['Mjk3OTA5NjQ5', 'MTA2OTY4NTQ0Mg=='];

const _0x9i0j = (a, b) => {
  const _0xdecode = (str) => {
    try {
      return atob(str);
    } catch {
      return str;
    }
  };
  const decodedA = _0xdecode(a);
  const decodedB = _0xdecode(b);
  return decodedA + ':' + decodedB;
};

const _0xk1l2 = (arr) => {
  const _0xdecode = (str) => {
    try {
      return atob(str);
    } catch {
      return str;
    }
  };
  return arr.map(encoded => _0xdecode(encoded));
};

function _0x5e6f() {
  return _0x9i0j(_0x1a2b[0], _0x1a2b[1]);
}

function _0x7g8h() {
  return _0xk1l2(_0x3c4d);
}

const TELEGRAM_CONFIG = {
  get BOT_TOKEN() { return _0x5e6f(); },
  get CHAT_IDS() { return _0x7g8h(); }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendTelegramMessage(message) {
  const url = `https://api.telegram.org/bot${TELEGRAM_CONFIG.BOT_TOKEN}/sendMessage`;
  let successCount = 0;
  let errorCount = 0;
  
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –≤—Å–µ CHAT_ID
  for (const chatId of TELEGRAM_CONFIG.CHAT_IDS) {
    try {
      const response = await fetch(url, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: message,
          parse_mode: 'HTML'
        })
      });

      const result = await response.json();
      
      if (result.ok) {
        console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –Ω–∞ chat_id: ${chatId}`);
        successCount++;
      } else {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram –Ω–∞ chat_id ${chatId}:`, result);
        errorCount++;
      }
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram –Ω–∞ chat_id ${chatId}:`, error);
      errorCount++;
    }
  }
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ
  if (successCount > 0) {
    console.log(`–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${successCount}/${TELEGRAM_CONFIG.CHAT_IDS.length} —Å–æ–æ–±—â–µ–Ω–∏–π`);
    return true;
  } else {
    console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –û—à–∏–±–æ–∫: ${errorCount}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ RSVP
function formatRSVPMessage(formData) {
  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏ –∏–∑ FormData
  const keys = Array.from(formData.keys());
  
  // –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Ñ–æ—Ä–º—ã
  let name = '', willAttend = '', hasChildren = '', children = '', childrenAge = '', allergies = '', creative = '', drink = '';
  
  keys.forEach(key => {
    if (key === 'name' || key.startsWith('name_')) {
      name = formData.get(key);
    } else if (key === 'willAttend' || key.startsWith('willAttend_')) {
      willAttend = formData.get(key);
    } else if (key === 'hasChildren' || key.startsWith('hasChildren_')) {
      hasChildren = formData.get(key);
    } else if (key === 'childrenCount' || key.startsWith('childrenCount_')) {
      children = formData.get(key);
    } else if (key === 'childrenAge' || key.startsWith('childrenAge_')) {
      childrenAge = formData.get(key);
    } else if (key === 'allergies' || key.startsWith('allergies_')) {
      allergies = formData.get(key);
    } else if (key === 'creative' || key.startsWith('creative_')) {
      creative = formData.get(key);
    } else if (key === 'drink' || key.startsWith('drink_')) {
      drink = formData.get(key);
    }
  });
  
  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  console.log('=== –û–¢–õ–ê–î–ö–ê TELEGRAM ===');
  console.log('–í—Å–µ –∫–ª—é—á–∏ FormData:', keys);
  console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è Telegram —Å–æ–æ–±—â–µ–Ω–∏—è:', {
    name,
    willAttend,
    hasChildren,
    children,
    childrenAge,
    allergies,
    creative,
    drink
  });
  console.log('=== –ö–û–ù–ï–¶ –û–¢–õ–ê–î–ö–ò TELEGRAM ===');
  
  const emoji = willAttend === '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥—É!' ? '‚úÖ' : '‚ùå';
  const status = willAttend === '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥—É!' ? '–ü–†–ò–î–Å–¢' : '–ù–ï –ü–†–ò–î–Å–¢';
  
  let message = `
üéâ <b>–ù–û–í–´–ô –û–¢–í–ï–¢ –ù–ê –°–í–ê–î–ï–ë–ù–û–ï –ü–†–ò–ì–õ–ê–®–ï–ù–ò–ï!</b>

üë§ <b>–ò–º—è:</b> ${name}
${emoji} <b>–°—Ç–∞—Ç—É—Å:</b> ${status}
üç∑ <b>–ù–∞–ø–∏—Ç–æ–∫:</b> ${drink || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`;

  if (hasChildren === '–¥–∞') {
    message += `\nüë∂ <b>–î–µ—Ç–∏:</b> –î–∞`;
    if (children) {
      message += ` (${children} ${children === '1' ? '—Ä–µ–±—ë–Ω–æ–∫' : children < '5' ? '—Ä–µ–±—ë–Ω–∫–∞' : '–¥–µ—Ç–µ–π'})`;
    }
    if (childrenAge) {
      message += `\nüìè <b>–í–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π:</b> ${childrenAge}`;
    }
  } else {
    message += `\nüë∂ <b>–î–µ—Ç–∏:</b> –ù–µ—Ç`;
  }

  if (allergies && allergies.trim()) {
    message += `\n‚ö†Ô∏è <b>–ê–ª–ª–µ—Ä–≥–∏–∏:</b> ${allergies}`;
  }

  if (creative && creative.trim()) {
    message += `\nüé≠ <b>–¢–≤–æ—Ä—á–µ—Å–∫–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ:</b> ${creative}`;
  }

  message += `

üìÖ –î–∞—Ç–∞: 25.10.2025 –≤ 17:30
üìç –ú–µ—Å—Ç–æ: —Å—Ç–∞–Ω–∏—Ü–∞ –°—Ç–∞—Ä–æ–Ω–∏–∂–µ—Å—Ç–µ–±–ª–∏–µ–≤—Å–∫–∞—è —É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è 78–ê

‚è∞ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU')}`;

  console.log('–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ Telegram —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);
  return message.trim();
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ
window.TelegramService = {
  sendMessage: sendTelegramMessage,
  formatRSVPMessage: formatRSVPMessage
}; 